plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '2.0.0-beta.18'
    id 'xyz.jpenilla.run-paper' version '2.3.0'
    id 'maven-publish'
}

version = project.version
group = project.group
description = 'Chococar Inventory Bridge Paper Plugin'

base {
    archivesName = "chococars-inventory-bridge-paper"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
}

dependencies {
    
    paperweight.paperDevBundle("1.21.4-R0.1-SNAPSHOT")

    // 共通模組 (包含所有必要依賴)
    implementation project(':common')
    
    // 直接依賴項
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'org.slf4j:slf4j-api:2.0.7'
}

tasks {
    compileJava {
        options.release = 21
    }
    
    javadoc {
        options.encoding = 'UTF-8'
    }
    
    processResources {
        filteringCharset = 'UTF-8'
        def props = [
            version    : project.version,
            description: project.description,
            apiVersion : "1.21"
        ]
        inputs.properties(props)
        filesMatching("paper-plugin.yml") {
            expand(props)
        }
    }
    
    jar {
        // 依賴於 common 模組的 jar 任務
        dependsOn ':common:jar'
        
        // 處理重複文件策略
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        
        // 包含 common 模組的類文件
        from(project(':common').sourceSets.main.output) {
            exclude 'META-INF/**'
        }
        
        // 包含所有依賴項的類文件
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        } {
            exclude 'META-INF/**'
            exclude '**/*.SF'
            exclude '**/*.DSA'
            exclude '**/*.RSA'
        }
        
        // 設置 Manifest
        manifest {
            attributes([
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
            ])
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}