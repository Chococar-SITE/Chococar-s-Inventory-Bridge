plugins {
    id 'fabric-loom' version '1.11.4'
    id 'maven-publish'
}

version = project.version
group = project.group

base {
    archivesName = "chococars-inventory-bridge-fabric"
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "chococars_inventory_bridge" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
            sourceSet sourceSets.test
        }
    }
}

dependencies {
    // Fabric 相關依賴
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // 共通模組
    implementation project(':common')
    include project(':common')
    
    // 包含 common 模組的所有依賴
    include 'org.yaml:snakeyaml:2.0'
    include 'com.mysql:mysql-connector-j:8.4.0'
    include 'com.zaxxer:HikariCP:5.0.1'
    include 'com.google.code.gson:gson:2.10.1'
    
    // 包含 SLF4J 實現 (避免日誌錯誤)
    include 'org.slf4j:slf4j-simple:2.0.7'
    
    // 測試依賴 - 改為不使用 mod 環境的普通測試
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.1.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
    testImplementation 'com.h2database:h2:2.2.220'
    
    // 將主要代碼作為測試依賴，但不包括 Minecraft 環境
    testImplementation project(':common')
}

test {
    useJUnitPlatform()
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

jar {
    from("../LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}